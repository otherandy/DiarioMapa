package com.proyecto.diario;import android.content.Intent;import android.os.Bundle;import androidx.annotation.NonNull;import androidx.appcompat.app.AppCompatActivity;import com.google.android.gms.location.FusedLocationProviderClient;import com.google.android.gms.location.LocationServices;import com.google.android.gms.maps.CameraUpdateFactory;import com.google.android.gms.maps.GoogleMap;import com.google.android.gms.maps.OnMapReadyCallback;import com.google.android.gms.maps.SupportMapFragment;import com.google.android.gms.maps.model.LatLng;import com.google.android.gms.maps.model.MarkerOptions;import com.google.android.material.floatingactionbutton.FloatingActionButton;import com.proyecto.diario.model.Note;import io.realm.Realm;import io.realm.RealmConfiguration;import io.realm.RealmResults;public class MainActivity extends AppCompatActivity implements OnMapReadyCallback {    GoogleMap map;    FusedLocationProviderClient fusedLocationProviderClient;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        // Initialize Realm        Realm.init(this);        // The RealmConfiguration is created using the builder pattern.        RealmConfiguration config = new RealmConfiguration.Builder()                .allowWritesOnUiThread(true)                .build();        Realm.setDefaultConfiguration(config);        Realm.deleteRealm(config);        //map configuration        SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager()                .findFragmentById(R.id.map);        assert mapFragment != null;        mapFragment.getMapAsync(this);        //location provider config        fusedLocationProviderClient = LocationServices.getFusedLocationProviderClient(this);        FloatingActionButton btnAdd = findViewById(R.id.btnAdd);        FloatingActionButton btnPosition = findViewById(R.id.btnPosition);        FloatingActionButton btnAbout = findViewById(R.id.btnAbout);        btnAdd.setOnClickListener(view -> startActivity(new Intent(MainActivity.this, NoteActivity.class)));        btnPosition.setOnClickListener(view -> startActivity(new Intent(MainActivity.this, ListActivity.class)));        btnAbout.setOnClickListener(view -> startActivity(new Intent(MainActivity.this, AboutActivity.class)));    }    @Override    protected void onStart() {        super.onStart();        Realm realm = Realm.getDefaultInstance();        RealmResults<Note> notes = realm.where(Note.class).findAll();        realm.executeTransaction(r -> {            for (Note note : notes) {                map.addMarker(new MarkerOptions().position(note.getLocation()));            }        });    }    /**     * Manipulates the map once available.     * This callback is triggered when the map is ready to be used.     * This is where we can add markers or lines, add listeners or move the camera. In this case,     * we just add a marker near Sydney, Australia.     * If Google Play services is not installed on the device, the user will be prompted to install     * it inside the SupportMapFragment. This method will only be triggered once the user has     * installed Google Play services and returned to the app.     */    @Override    public void onMapReady(@NonNull GoogleMap googleMap) {        map = googleMap;        LatLng riviera = new LatLng(31.8573718, -116.6189615);//        googleMap.addMarker(new MarkerOptions().position(riviera).title("Museo Riviera"));        googleMap.moveCamera(CameraUpdateFactory.newLatLng(riviera));        googleMap.moveCamera(CameraUpdateFactory.zoomTo(15));    }}